const mapConfig={overworld:{bounds:[[-5120,-5632],[7167,7679]],startCenter:[690,778],url:"drehmal_images/maps/overworld/tiles/zoom.{z}/tile.{x}.{y}.png",zoomMin:-6},end:{bounds:[[-512,-512],[511,511]],startCenter:[0,0],url:"drehmal_images/maps/end/tiles/zoom.{z}/tile.{x}.{y}.png",zoomMin:-2},true_end:{bounds:[[-512,0],[10751,10239]],startCenter:[690,778],url:"drehmal_images/maps/true_end/tiles/zoom.{z}/tile.{x}.{y}.png",zoomMin:-6},lodahr:{bounds:[[-3072,-2560],[2559,27647]],startCenter:[-718,-64],url:"drehmal_images/maps/lodahr/tiles/zoom.{z}/tile.{x}.{y}.png",zoomMin:-6},space:{bounds:[[-512,-512],[511,511]],startCenter:[122,-130],url:"drehmal_images/maps/space/tiles/zoom.{z}/tile.{x}.{y}.png",zoomMin:-2}};async function createGeoJsonLayer(filepath){let geoJsonData=await d3.json(filepath);return L.geoJSON(geoJsonData,{style:function(feature){return{color:feature.properties.color,fillOpacity:.8}},onEachFeature:function onEachFeature(feature,layer){layer.bindPopup(`<span class=popup_title>${feature.properties.name}</span>`)}})}async function readAndDimensionFilter(dimension,filepath){return(await d3.json(filepath)).filter((d=>d.dim===dimension))}function createMarker(element,customIcon){let detail_text=element.detail?element.detail:"";return L.marker([element.z+.5,element.x+.5],{icon:customIcon}).bindPopup(`<span class=popup_title>${element.name}</span><hr>\n                  <span class=popup_xyz>${element.x} ${element.y} ${element.z}</span><br>\n                  ${detail_text}`)}function createLocationCircleMarker(renderer,locationData){let circleMarker=L.circleMarker([locationData.z+.5,locationData.x+.5],{fillColor:colorMarker(locationData.type),fillOpacity:.8,radius:10,stroke:!0,color:"#000",weight:2,renderer:renderer}).bindPopup(`<span class=popup_title>${locationData.name}</span>\n                  <hr>\n                  <span class=popup_xyz>${locationData.x} ${locationData.y} ${locationData.z}</span><br>\n                  ${locationData.type}<br>\n                  ${locationData.detail}`);return circleMarker.options.type=locationData.type,circleMarker}function devotionItems(offerings){const devotionItems=document.createElement("ol");devotionItems.classList.add("devotionList");for(const[deity,item_list]of Object.entries(offerings)){const li=document.createElement("li");item_list.forEach((item=>{const itemImage=document.createElement("img");itemImage.src=`drehmal_images/icons/${item}.png`,itemImage.alt=item,itemImage.title=item,itemImage.classList.add("devotionItemImage"),itemImage.style.width="32px",itemImage.style.height="32px",li.appendChild(itemImage)})),devotionItems.appendChild(li)}return devotionItems}function createDevotionMarker(element,offerings){let detail_text=element.detail?element.detail:"",devotion_icon=new IconDevotion({iconUrl:element.icon});const devotionList=devotionItems(offerings).outerHTML;return L.marker([element.z+.5,element.x+.5],{icon:devotion_icon}).bindPopup(`<span class=popup_title>Devotion: ${element.name}</span><hr>\n                  <span class=popup_xyz>${element.x} ${element.y} ${element.z}</span><br>\n                  ${detail_text}<br>\n                  ${devotionList}`,{maxWidth:"600",maxHeight:"500"})}function createMythicalMarker(element){let mythical_icon=new IconMythic({iconUrl:element.icon});const loreText=document.createElement("div");return loreText.classList.add("lore_text"),loreText.innerHTML=element.lore.replace(/\n/g,"<br>"),L.marker([element.z+.5,element.x+.5],{icon:mythical_icon}).bindPopup(`<span class=popup_title>${element.name}</span><hr>\n                  <span class=popup_xyz>${element.x} ${element.y} ${element.z}</span><br>\n                  ${loreText.outerHTML}`)}function createLegendaryMarker(element){let legendary_icon=new IconLegendary({iconUrl:element.icon});const loreText=document.createElement("div");return loreText.classList.add("lore_text"),loreText.innerHTML=element.lore.replace(/\n/g,"<br>"),L.marker([element.z+.5,element.x+.5],{icon:legendary_icon}).bindPopup(`<span class=popup_title>${element.name.replace(/\n/g,"<br>")}</span><hr>\n                  <span class=popup_xyz>${element.x} ${element.y} ${element.z}</span><br>\n                  ${loreText.outerHTML}`)}function layerLocations(locationData,renderer){let locationLayer=L.layerGroup();return locationData.forEach((element=>{let marker=createLocationCircleMarker(renderer,element);locationLayer.addLayer(marker)})),locationLayer}function layerDevotion(devotionData,devotionOfferings){let devotionLayer=L.layerGroup();return devotionData.forEach((element=>{let marker=createDevotionMarker(element,devotionOfferings[element.name]);devotionLayer.addLayer(marker)})),devotionLayer}function createLayer(data,markerFunction,layerIcon){return lGroup=L.layerGroup(),data.forEach((element=>{let marker;marker=markerFunction?markerFunction(element):createMarker(element,layerIcon),lGroup.addLayer(marker)})),lGroup}function createClusterIcon(cluster,iconImage){return L.divIcon({className:"mc-cluster-icon",html:`<div class="cluster-image-container">\n                   <img src="${iconImage}">\n                   <div class="mc-cluster-icon-count">${cluster.getChildCount()}</div>\n               </div>`,iconAnchor:[16,16]})}function createClusterLayer(data,markerFunction,iconImage){return clusterGroup=L.markerClusterGroup({showCoverageOnHover:!1,maxClusterRadius:10,spiderLegPolylineOptions:{weight:2,color:"#000000",opacity:1},iconCreateFunction:cluster=>createClusterIcon(cluster,iconImage)}),data.forEach((element=>{let marker=markerFunction(element);clusterGroup.addLayer(marker)})),clusterGroup}async function createOverlays(dimension,renderer){overlayLayers={},"overworld"===dimension&&(overlayLayers.Regions=await createGeoJsonLayer("data/regions.geojson")),"lodahr"===dimension&&(overlayLayers.Domains=await createGeoJsonLayer("data/domains.geojson"));let towers=await readAndDimensionFilter(dimension,"data/towers.json");console.log(`Towers: ${towers.length}`),towers.length>0&&(overlayLayers.Towers=createLayer(towers,null,TowerIcon));let portals=await readAndDimensionFilter(dimension,"data/lodahr_portals.json");console.log(`Portals: ${portals.length}`),portals.length>0&&(overlayLayers.Portals=createLayer(portals,null,LodahrPortalIcon));let locations=await readAndDimensionFilter(dimension,"data/locations.json");console.log(`Locations: ${locations.length}`),locations.length>0&&(overlayLayers.Locations=layerLocations(locations,renderer));let devotion=await readAndDimensionFilter(dimension,"data/devotion.json"),devotionOfferings=await d3.json("data/devotion_offerings.json");console.log(`Devotion: ${devotion.length}`),devotion.length>0&&(overlayLayers.Devotion=layerDevotion(devotion,devotionOfferings));let mythical=await readAndDimensionFilter(dimension,"data/mythical.json");console.log(`Mythical: ${mythical.length}`),mythical.length>0&&(overlayLayers.Mythical=createLayer(mythical,createMythicalMarker));let legendary=await readAndDimensionFilter(dimension,"data/legendary.json");return console.log(`Legendary: ${legendary.length}`),legendary.length>0&&(overlayLayers.Legendary=createLayer(legendary,createLegendaryMarker)),overlayLayers}function imgSmallElement(icon_name){const itemImage=document.createElement("img");return itemImage.src=`drehmal_images/icons/${icon_name}.png`,itemImage.style.width="16px",itemImage.style.height="16px",itemImage.style.verticalAlign="middle",itemImage}function storageHtml(items){const itemList=document.createElement("ul");return itemList.classList.add("storageList"),items.forEach((item=>{const li=document.createElement("li"),bulletImage=imgSmallElement(item.name);if(li.appendChild(bulletImage),li.innerHTML+=`${item.count}× <span class="${item.enchanted?"enchanted":""}">${item.displayName}</span>`,item.lore){const loreText=document.createElement("div");loreText.classList.add("lore_text"),loreText.innerHTML=item.lore.replace(/\n/g,"<br>"),li.appendChild(loreText)}itemList.appendChild(li)})),itemList}function tradeHtml(trades){const itemList=document.createElement("ul");return itemList.classList.add("tradeList"),trades.forEach((trade=>{const li=document.createElement("li"),buyImage=imgSmallElement(trade.buy.name);if(li.appendChild(buyImage),li.innerHTML+=`${trade.buy.count}× <span class="${trade.buy.enchanted?"enchanted":""}">${trade.buy.displayName}</span>`,trade.buyB){li.innerHTML+=" <strong>+</strong> ";const buyBImage=imgSmallElement(trade.buyB.name);li.appendChild(buyBImage),li.innerHTML+=`${trade.buyB.count}× <span class="${trade.buyB.enchanted?"enchanted":""}">${trade.buyB.displayName}</span>`}li.innerHTML+=" <strong>→</strong> ";const sellImage=imgSmallElement(trade.sell.name);if(li.appendChild(sellImage),li.innerHTML+=`${trade.sell.count}× <span class="${trade.sell.enchanted?"enchanted":""}">${trade.sell.displayName}</span>`,trade.sell.lore){const loreText=document.createElement("div");loreText.classList.add("lore_text"),loreText.innerHTML=trade.sell.lore.replace(/\n/g,"<br>"),li.appendChild(loreText)}itemList.appendChild(li)})),itemList}function createStorageMarker(element){let icon=new Icon32({iconUrl:`drehmal_images/icons/${element.name}.png`}),items_html=storageHtml(element.items).outerHTML;return L.marker([element.z+.5,element.x+.5],{icon:icon}).bindPopup(`<span class=popup_title>${element.displayName}</span><hr>\n                  <span class=popup_xyz>${element.x} ${element.y} ${element.z}</span><br>\n                  ${items_html}`,{maxWidth:"600",maxHeight:"400"})}function createTraderMarker(element){let icon=new IconTrader({iconUrl:`drehmal_images/icons/entity/${element.name}.png`}),trade_html=tradeHtml(element.trades).outerHTML;return L.marker([element.z+.5,element.x+.5],{icon:icon}).bindPopup(`<span class=popup_title>${element.displayName}</span><hr>\n                  <span class=popup_xyz>${element.x} ${element.y} ${element.z}</span><br>\n                  ${trade_html}`,{maxWidth:"600",maxHeight:"400"})}function createEntityMarker(element){let icon=new IconEntity({iconUrl:`drehmal_images/icons/entity/${element.name}.png`});return L.marker([element.z+.5,element.x+.5],{icon:icon}).bindPopup(`<span class=popup_title>${element.displayName}</span><hr>\n                  <span class=popup_xyz>${element.x} ${element.y} ${element.z}</span>`)}function createTileEntityMarker(element){let icon=new Icon32({iconUrl:`drehmal_images/icons/${element.name}.png`});return L.marker([element.z+.5,element.x+.5],{icon:icon}).bindPopup(`<span class=popup_title>${element.displayName}</span><hr>\n                  <span class=popup_xyz>${element.x} ${element.y} ${element.z}</span>`)}function groupFilter(group,entity_array){return entity_array.filter((d=>d.group===group))}async function createEntityOverlays(dimension){let tiles_and_entities=await readAndDimensionFilter(dimension,"data/all_entity_data.json");console.log(`Tiles and Entities: ${tiles_and_entities.length}`);let entityLayers={},storage_ent=groupFilter("storage",tiles_and_entities);console.log(`Storage Entities: ${storage_ent.length}`),storage_ent.length>0&&(entityLayers.Storage=createClusterLayer(storage_ent,createStorageMarker,"drehmal_images/icons/chest.png"));let lectern_ent=groupFilter("lectern",tiles_and_entities);console.log(`Lecterns with Book: ${lectern_ent.length}`),lectern_ent.length>0&&(entityLayers.Lecterns=createLayer(lectern_ent,createStorageMarker));let itemFrame_ent=groupFilter("item_frame",tiles_and_entities);console.log(`Item Frames: ${itemFrame_ent.length}`),itemFrame_ent.length>0&&(entityLayers["Item Frames"]=createClusterLayer(itemFrame_ent,createStorageMarker,"drehmal_images/icons/item_frame.png"));let traders_ent=groupFilter("trader",tiles_and_entities);console.log(`Named Traders: ${traders_ent.length}`),traders_ent.length>0&&(entityLayers["Named Trader"]=createLayer(traders_ent,createTraderMarker));let armorStand_ent=groupFilter("armor_stand",tiles_and_entities);console.log(`Armor Stands with Items: ${armorStand_ent.length}`),armorStand_ent.length>0&&(entityLayers["Armor Stands"]=createClusterLayer(armorStand_ent,createStorageMarker,"drehmal_images/icons/armor_stand.png"));let entity_ent=groupFilter("entity",tiles_and_entities);console.log(`Named Entities: ${entity_ent.length}`),entity_ent.length>0&&(entityLayers["Other Entities"]=createLayer(entity_ent,createEntityMarker));let tileEntity_ent=groupFilter("tile_entity",tiles_and_entities);return console.log(`Tile Entities: ${tileEntity_ent.length}`),tileEntity_ent.length>0&&(entityLayers["Other Tile Entities"]=createLayer(tileEntity_ent,createTileEntityMarker)),entityLayers}async function start(){const mapDimension=document.getElementById("map").getAttribute("data-map"),config=mapConfig[mapDimension];if(!config)return void console.error(`No configuration found for map type: ${mapDimension}`);const crs=L.extend({},L.CRS.Simple,{transformation:new L.Transformation(1,0,1,0)});let baseTiles=L.tileLayer(config.url,{errorTileUrl:"drehmal_images/maps/null_tile.webp",attribution:"&copy; Drehmal map creators, uNmINeD, Mojang",minZoom:config.zoomMin,maxZoom:6,maxNativeZoom:2,noWrap:!0,maxBounds:config.bounds}),canvasRenderer=L.canvas({padding:.1});const overlays=await createOverlays(mapDimension,canvasRenderer),overlaysEntity=await createEntityOverlays(mapDimension),mapLayers=overlays&&Object.keys(overlays).length>0?overlays:{},mapEntityLayers=overlaysEntity&&Object.keys(overlaysEntity).length>0?overlaysEntity:{};let map=L.map("map",{center:[0,0],zoom:0,layers:[baseTiles,mapLayers.Locations],crs:crs,drawControl:!0});map.pm.addControls({position:"topleft",drawMarker:!1,drawCircleMarker:!1,drawText:!1,drawRectangle:!1,drawPolygon:!0,editMode:!0,dragMode:!1,rotateMode:!1,cutPolygon:!0,removalMode:!0}),map.pm.setGlobalOptions({snappable:!0,snapDistance:10,tooltips:!1}),L.control.layers(null,mapLayers,{collapsed:!1}).addTo(map),L.control.layers(null,mapEntityLayers,{collapsed:!1}).addTo(map);var drawnItems=new L.FeatureGroup;map.addLayer(drawnItems),map.on("pm:create",(function(e){var layer=e.layer;drawnItems.addLayer(layer)})),L.control.mousePosition({separator:" z: ",lngFirst:!0,numDigits:0,prefix:"x:"}).addTo(map),map.setView(config.startCenter,0),document.getElementById("export").onclick=function(){var data=drawnItems.toGeoJSON(),convertedData="text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(data)),a=document.createElement("a");a.href="data:"+convertedData,a.download="data.geojson",a.innerHTML="Export GeoJSON",document.body.appendChild(a),a.click(),document.body.removeChild(a)},console.log("Start complete")}function colorMarker(value){switch(value){case"town":return"#F6DD00";case"small_town":return"#FFB700";case"abandoned_town":return"#814C0F";case"avsohm_facility":return"#9C01E9";case"building":return"#00B8E1";case"campsite":return"#CCE320";case"boss":return"#D00000";case"trial":return"#000DC3";case"other_location":return"#F95AF1";case"meta":return"#00FF00";default:return"#aaaaaa"}}start();